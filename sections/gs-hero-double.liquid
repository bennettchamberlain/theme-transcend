{%- liquid
    for block in section.blocks
    if forloop.first == true
        assign blockNumb = forloop.length
    endif
    endfor

    # Used for image sizes
    assign vw = 100 | divided_by: section.settings.perRow | append: 'vw'
    assign vw_s = 100 | divided_by: section.settings.perRowMob | append: 'vw'
-%}

<section class="hero-double blox-{{ blockNumb }}" {{ block.shopify_attributes }}>
    <x-grid columns="{{ section.settings.perRow }}" columns-s="{{ section.settings.perRowMob }}">
        {%- for block in section.blocks -%}
        {%- liquid
            case block.type
                when 'image'
                    assign mediaType = 'image'
                when 'video'
                    assign mediaType = 'video'
            endcase
        -%}
        <x-cell media-type="{{ mediaType }}" {{ block.shopify_attributes }}>
            {% if block.settings.url != blank %}<a href="{{ block.settings.url }}" class="no-style">{% endif %}

            {%- if block.settings.title -%}
            <x-flex class="contents" pi="{{ block.settings.contentPosition }}">
                <x-cell>
                    <h3 class="title{% if block.settings.heroHasBg == true %} hasBg{% endif %}" style="--heroMetaH1Bg:{{ block.settings.heroBg }};color:{{ block.settings.heroColor }}">{{ block.settings.title }}</h3>
                </x-cell>
            </x-flex>
			{%- endif -%}

            {%- case block.type -%}
            {%- when 'image' -%}

    			<picture>
                {%- capture sizes -%}(max-width:777px) {{ vw_s }}, (min-width:778px) {{ vw }}, 100vw{%- endcapture -%}
    			{%- liquid 
                    assign img = block.settings.image
                    assign widths = '450,550,750,950,1100,1280'

                    if img != nil
                        render 'global-img' for block as block, img: img, alt: block.settings.title, lazyload: block.settings.lazyload, sizes: sizes, widths: widths
                    else
    				    echo 'collection-2' | placeholder_svg_tag: 'svg-placeholder banner'
                    endif 
                -%}
    		 	</picture>

            {%- when 'video' -%}

                {%- liquid
                    if block.settings.video != nil
                        assign uniqueId = block.settings.video.id
                        assign playerId = uniqueId
                        assign videoPoster = block.settings.video.preview_image | image_url: width: 1500     
                    else
                        assign uniqueId = section.id | remove: '-' | remove: '_'
                        assign playerId = uniqueId | split: "_" | last
                    endif
                -%}

                {%- if block.settings.video != nil -%}
                <video
                    id="video-{{ uniqueId }}"
                    controls
                    crossorigin 
                    playsinline 
                    {% if block.settings.videoLoop == true %}loop{% endif %}
                    {% if block.settings.videoAutoplay == true %}autoplay{% endif %}
                    {% if block.settings.videoMute == true %}muted{% endif %}
                    poster="{{ videoPoster }}"
                    {%- if section.settings.lazyload -%}loading="lazy"{%- endif-%}
                >
                    {%- for video in block.settings.video.sources -%}
                        <source src="{{ video.url }}" type="{{ video.mime_type }}">
                    {%- endfor -%}
                </video>

                {{ 'plyr.min.css' | asset_url | stylesheet_tag }}
                <style>.plyr__video-wrapper{height:100%}</style>

                <script src="{{ 'plyr.min.js' | asset_url }}"></script>
                <script>const player{{ playerId }} = new Plyr('#video-{{ uniqueId }}', { controls: ['play-large'] }); window.player = player{{ playerId }}</script>

                {%- else -%}
                    <picture>{{ 'lifestyle-1' | placeholder_svg_tag: 'svg-placeholder' }}</picture>
                {%- endif -%}

            {%- endcase -%}


		 	{%- if block.settings.url != blank -%}</a>{%- endif -%}
	 	</x-cell>
		{%- endfor -%}
	</x-grid>
</section>

{% schema %}
{
  "name": "Hero multicolumn",
  "disabled_on": {
    "groups": [
      "header",
      "footer",
      "aside"
    ]
  },
  "max_blocks": 6,
  "presets": [
    {
      "name": "Hero multicolumn",
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "video"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "select",
      "id": "perRow",
      "label": "Banners per row - desktop",
      "default": "2",
      "options": [
        {
          "value": "2",
          "label": "Two"
        },
        {
          "value": "3",
          "label": "Three"
        }
      ]
    },
    {
      "type": "select",
      "id": "perRowMob",
      "label": "Banners per row - mobile",
      "default": "1",
      "options": [
        {
          "value": "1",
          "label": "One"
        },
        {
          "value": "2",
          "label": "Two"
        }
      ]
    }
  ],
  "blocks": [
    {
      "name": "Image",
      "type": "image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "9:16 recommended"
        },
        {
          "type": "checkbox",
          "id": "lazyload",
          "label": "Enable lazy-loading",
          "default": true,
          "info": "Disable only in case this section is above the fold."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Your image hero heading"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Heading link"
        },
        {
          "type": "select",
          "id": "contentPosition",
          "label": "Content position",
          "default": "top left",
          "options": [
            {
              "value": "top left",
              "label": "Top left"
            },
            {
              "value": "top center",
              "label": "Top center"
            },
            {
              "value": "top right",
              "label": "Top right"
            },
            {
              "value": "center left",
              "label": "Middle left"
            },
            {
              "value": "center",
              "label": "Middle center"
            },
            {
              "value": "center right",
              "label": "Middle right"
            },
            {
              "value": "bottom left",
              "label": "Bottom left"
            },
            {
              "value": "bottom center",
              "label": "Bottom center"
            },
            {
              "value": "bottom right",
              "label": "Bottom right"
            }
          ]
        },
        {
          "type": "header",
          "content": "Appearance"
        },
        {
          "type": "color",
          "id": "heroColor",
          "label": "Heading text color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "heroBg",
          "label": "Heading background color",
          "default": "#FFFFFF"
        },
        {
          "type": "checkbox",
          "id": "heroHasBg",
          "label": "Enable heading background",
          "default": false
        }
      ]
    },
    {
      "name": "Video",
      "type": "video",
      "settings": [
        {
          "type": "video",
          "id": "video",
          "label": "Video",
          "info": "9:16 recommended"
        },
        {
          "type": "checkbox",
          "id": "videoLoop",
          "label": "Loop",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "videoMute",
          "label": "Mute",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "videoAutoplay",
          "label": "Autoplay",
          "default": false,
          "info": "Autoplay is not recommended. It is not supported on mobile devices and disabled by default in many browsers."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Your video hero heading"
        },
        {
          "type": "select",
          "id": "contentPosition",
          "label": "Content position",
          "default": "top left",
          "options": [
            {
              "value": "top left",
              "label": "Top left"
            },
            {
              "value": "top center",
              "label": "Top center"
            },
            {
              "value": "top right",
              "label": "Top right"
            },
            {
              "value": "center left",
              "label": "Middle left"
            },
            {
              "value": "center",
              "label": "Middle center"
            },
            {
              "value": "center right",
              "label": "Middle right"
            },
            {
              "value": "bottom left",
              "label": "Bottom left"
            },
            {
              "value": "bottom center",
              "label": "Bottom center"
            },
            {
              "value": "bottom right",
              "label": "Bottom right"
            }
          ]
        },
        {
          "type": "header",
          "content": "Appearance"
        },
        {
          "type": "color",
          "id": "heroColor",
          "label": "Heading text color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "heroBg",
          "label": "Heading background color",
          "default": "#FFFFFF"
        },
        {
          "type": "checkbox",
          "id": "heroHasBg",
          "label": "Enable heading background",
          "default": false
        }
      ]
    }
  ]
}
{% endschema %}